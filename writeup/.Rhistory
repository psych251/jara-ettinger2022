#summarise(counter = n(Match == "Shape"))
ggplot(d_filtered_long, aes(x=Match, fill=Question)) +
geom_bar()
#d_filtered_long_summarized = d_filtered_long %>%
# group_by(Question, Choice) %>%
#summarise(counter = n(Match == "Shape"))
ggplot(d_filtered_long, aes(x=Match, fill=Question)) +
geom_bar(position="dodge", stat="identity")
#d_filtered_long_summarized = d_filtered_long %>%
# group_by(Question, Choice) %>%
#summarise(counter = n(Match == "Shape"))
ggplot(d_filtered_long, aes(x=Match, fill=Question)) +
geom_bar( stat="identity")
#d_filtered_long_summarized = d_filtered_long %>%
# group_by(Question, Choice) %>%
#summarise(counter = n(Match == "Shape"))
ggplot(d_filtered_long, aes(x=Match, fill=Question)) +
geom_bar(position="dodge")
d_filtered_long = d_filtered_long %>%
mutate(Match = ifelse(Question == Choice, "Shape", "Material/Color"))
ggplot(d_filtered_long, aes(x=Match, fill=Question)) +
geom_bar(position="dodge")
###Data Preparation
####Load Relevant Libraries and Functions
library(tidyverse)
library(foreign)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(here)
####Import data
d = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/Jara-ettinger2022_October 28, 2022_22.24.csv")
#### Data exclusion / filtering
d_filtered = d %>% select(c("ResponseId", "Q5", "Q9", "Q12"))
d_filtered_long = d_filtered %>%
pivot_longer(cols = -c("ResponseId") ,names_to = 'Question', values_to = 'Choice')
#### Prepare data for analysis - create columns etc.
d_filtered_long$Question[d_filtered_long$Question == "Q5"] <- "Yarn"
d_filtered_long$Question[d_filtered_long$Question == "Q9"] <- "Dax"
d_filtered_long$Question[d_filtered_long$Question == "Q12"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_eY8Vwfih2OynNCm"] <- "Yarn"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_enDeJ2onL1JrLP8"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_5A9xQWROP0v4aPA"] <- "Dax"
d_filtered_long = d_filtered_long %>% filter( !grepl("Import|Response",ResponseId))
is.na(d_filtered_long$Choice)
d_filtered_long$Choice[d_filtered_long$Choice==""] <- NA
d_filtered_long = d_filtered_long %>% filter(!is.na(Choice))
d_filtered_long = d_filtered_long %>%
mutate(Match = ifelse(Question == Choice, "Shape", "Material/Color"))
###Data Preparation
####Load Relevant Libraries and Functions
library(tidyverse)
library(foreign)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(here)
####Import data
d = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/Jara-ettinger2022_October 28, 2022_22.24.csv")
head(d)
#### Data exclusion / filtering
d_filtered = d %>% select(c("ResponseId", "Q5", "Q9", "Q12"))
d_filtered_long = d_filtered %>%
pivot_longer(cols = -c("ResponseId") ,names_to = 'Question', values_to = 'Choice')
#### Prepare data for analysis - create columns etc.
d_filtered_long$Question[d_filtered_long$Question == "Q5"] <- "Yarn"
d_filtered_long$Question[d_filtered_long$Question == "Q9"] <- "Dax"
d_filtered_long$Question[d_filtered_long$Question == "Q12"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_eY8Vwfih2OynNCm"] <- "Yarn"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_enDeJ2onL1JrLP8"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_5A9xQWROP0v4aPA"] <- "Dax"
d_filtered_long = d_filtered_long %>% filter( !grepl("Import|Response",ResponseId))
#is.na(d_filtered_long$Choice)
d_filtered_long$Choice[d_filtered_long$Choice==""] <- NA
d_filtered_long = d_filtered_long %>% filter(!is.na(Choice))
d_filtered_long = d_filtered_long %>%
mutate(Match = ifelse(Question == Choice, "Shape", "Material/Color"))
###Data Preparation
####Load Relevant Libraries and Functions
library(tidyverse)
library(foreign)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(here)
####Import data
d = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/Jara-ettinger2022_October 28, 2022_22.24.csv")
head(d)
#### Data exclusion / filtering
d_filtered = d %>% select(c("ResponseId", "Q5", "Q9", "Q12"))
d_filtered_long = d_filtered %>%
pivot_longer(cols = -c("ResponseId") ,names_to = 'Question', values_to = 'Choice')
head(d_filtered_long)
#### Prepare data for analysis - create columns etc.
d_filtered_long$Question[d_filtered_long$Question == "Q5"] <- "Yarn"
d_filtered_long$Question[d_filtered_long$Question == "Q9"] <- "Dax"
d_filtered_long$Question[d_filtered_long$Question == "Q12"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_eY8Vwfih2OynNCm"] <- "Yarn"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_enDeJ2onL1JrLP8"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_5A9xQWROP0v4aPA"] <- "Dax"
d_filtered_long = d_filtered_long %>% filter( !grepl("Import|Response",ResponseId))
#is.na(d_filtered_long$Choice)
d_filtered_long$Choice[d_filtered_long$Choice==""] <- NA
d_filtered_long = d_filtered_long %>% filter(!is.na(Choice))
d_filtered_long = d_filtered_long %>%
mutate(Match = ifelse(Question == Choice, "Shape", "Material/Color"))
###Data Preparation
####Load Relevant Libraries and Functions
library(tidyverse)
library(foreign)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(here)
####Import data
d = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/Jara-ettinger2022_October 28, 2022_22.24.csv")
head(d)
#### Data exclusion / filtering
d_filtered = d %>% select(c("ResponseId", "Q5", "Q9", "Q12"))
d_filtered_long = d_filtered %>%
pivot_longer(cols = -c("ResponseId") ,names_to = 'Question', values_to = 'Choice')
#### Prepare data for analysis - create columns etc.
d_filtered_long$Question[d_filtered_long$Question == "Q5"] <- "Yarn"
d_filtered_long$Question[d_filtered_long$Question == "Q9"] <- "Dax"
d_filtered_long$Question[d_filtered_long$Question == "Q12"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_eY8Vwfih2OynNCm"] <- "Yarn"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_enDeJ2onL1JrLP8"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_5A9xQWROP0v4aPA"] <- "Dax"
d_filtered_long = d_filtered_long %>% filter( !grepl("Import|Response",ResponseId))
#is.na(d_filtered_long$Choice)
d_filtered_long$Choice[d_filtered_long$Choice==""] <- NA
d_filtered_long = d_filtered_long %>% filter(!is.na(Choice))
d_filtered_long = d_filtered_long %>%
mutate(Match = ifelse(Question == Choice, "Shape", "Material/Color"))
head(d_filtered_long)
model = lm(Match ~ Question, d_filtered_long)
model = lm(Match ~ Question, d_filtered_long)
data_new <- d_filtered_long                                   # Duplicate data
data_new[is.na(data_new) | data_new == "Inf"] <- NA
View(data_new)
model = lm(Match ~ Question, data_new)
summary(model)
model1 = lm(Match ~ Question, data_new)
summary(model1)
#d_filtered_long_summarized = d_filtered_long %>%
# group_by(Question, Choice) %>%
#summarise(counter = n(Match == "Shape"))
ggplot(d_filtered_long, aes(x=Match, fill=Question)) +
geom_bar(position="dodge")
data_new <- d_filtered_long                                   # Duplicate data
data_new[is.na(data_new) | data_new == "Inf"] <- NA
model1 = lm(Match ~ Question, data_new)
#model1 = lm(Match ~ Question, data_new)
#summary(model1)
chisq.test(d_filtered_long$Match, d_filtered_long$Question, correct=FALSE)
####Import data
d = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/Jara-ettinger2022_October 31, 2022_19.22.csv")
head(d)
#### Data exclusion / filtering
d_filtered = d %>% select(c("ResponseId", "Q5", "Q9", "Q12"))
d_filtered_long = d_filtered %>%
pivot_longer(cols = -c("ResponseId") ,names_to = 'Question', values_to = 'Choice')
d_filtered_long$Question[d_filtered_long$Question == "Q5"] <- "Yarn" #replace question number with the name of the object that is shown in that question
d_filtered_long$Question[d_filtered_long$Question == "Q9"] <- "Dax"
d_filtered_long$Question[d_filtered_long$Question == "Q12"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_eY8Vwfih2OynNCm"] <- "Yarn"  #replace the serial number that identifies the answer choice with the name of the object that corresponds to that choice.
####Load Relevant Libraries and Functions
library(tidyverse)
####Load Relevant Libraries and Functions
library(tidyverse)
library(foreign)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(here)
####Import data
d = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/Jara-ettinger2022_October 31, 2022_19.22.csv")
head(d)
#### Data exclusion / filtering
d_filtered = d %>% select(c("ResponseId", "Q5", "Q9", "Q12"))
d_filtered_long$Question[d_filtered_long$Question == "Q5"] <- "Yarn" #replace question number with the name of the object that is shown in that question
d_filtered_long$Question[d_filtered_long$Question == "Q9"] <- "Dax"
d_filtered_long$Question[d_filtered_long$Question == "Q12"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_eY8Vwfih2OynNCm"] <- "Yarn"  #replace the serial number that identifies the answer choice with the name of the object that corresponds to that choice.
d_filtered_long$Choice[d_filtered_long$Choice == "IM_enDeJ2onL1JrLP8"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_5A9xQWROP0v4aPA"] <- "Dax"
d_filtered_long = d_filtered_long %>% filter( !grepl("Import|Response",ResponseId)) #filter some unwanted rows out.
#is.na(d_filtered_long$Choice)
d_filtered_long$Choice[d_filtered_long$Choice==""] <- NA #replace empty slots with NA
d_filtered_long = d_filtered_long %>% filter(!is.na(Choice)) # maintain only the questions that have answers, i.e. the question that appeared to each participant in the random trial.
d_filtered_long = d_filtered_long %>%
mutate(Match = ifelse(Question == Choice, "Shape", "Material/Color"))
head(d_filtered_long)
### Confirmatory analysis
ggplot(d_filtered_long, aes(x=Match, fill=Question)) +
geom_bar(position="dodge")
ggplot(d_filtered_long, aes(x=Match, fill=Question)) +
geom_bar(position="dodge")
#model1 = lm(Match ~ Question, data_new)
#summary(model1)
chisq.test(d_filtered_long$Match, d_filtered_long$Question, correct=FALSE)
#model1 = lm(Match ~ Question, data_new)
#summary(model1)
chisq.test(d_filtered_long$Match, d_filtered_long$Question, correct=FALSE)
ggplot(d_filtered_long, aes(x=Match, fill=Question)) +
geom_bar(position="dodge")
View(d_filtered_long)
head(d)
#### Data exclusion / filtering
d_filtered = d %>% select(c("ResponseId", "Q5", "Q9", "Q12"))
d_filtered_long = d_filtered %>%
pivot_longer(cols = -c("ResponseId") ,names_to = 'Question', values_to = 'Choice')
d_filtered_long$Question[d_filtered_long$Question == "Q5"] <- "Yarn" #replace question number with the name of the object that is shown in that question
d_filtered_long$Question[d_filtered_long$Question == "Q9"] <- "Dax"
d_filtered_long$Question[d_filtered_long$Question == "Q12"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_eY8Vwfih2OynNCm"] <- "Yarn"  #replace the serial number that identifies the answer choice with the name of the object that corresponds to that choice.
d_filtered_long$Choice[d_filtered_long$Choice == "IM_enDeJ2onL1JrLP8"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_5A9xQWROP0v4aPA"] <- "Dax"
d_filtered_long = d_filtered_long %>% filter( !grepl("Import|Response",ResponseId)) #filter some unwanted rows out.
#is.na(d_filtered_long$Choice)
d_filtered_long$Choice[d_filtered_long$Choice==""] <- NA #replace empty slots with NA
d_filtered_long = d_filtered_long %>% filter(!is.na(Choice)) # maintain only the questions that have answers, i.e. the question that appeared to each participant in the random trial.
d_filtered_long = d_filtered_long %>%
mutate(Match = ifelse(Question == Choice, "Shape", "Material/Color"))
head(d_filtered_long)
####Import data
d = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/Jara-ettinger2022_October 31, 2022_19.22.csv")
head(d)
#### Data exclusion / filtering
d_filtered = d %>% select(c("ResponseId", "Q5", "Q9", "Q12"))
View(d_filtered)
d_filtered_long = d_filtered %>%
pivot_longer(cols = -c("ResponseId") ,names_to = 'Question', values_to = 'Choice')
View(d_filtered_long)
d_filtered_long$Question[d_filtered_long$Question == "Q5"] <- "Yarn" #replace question number with the name of the object that is shown in that question
d_filtered_long$Question[d_filtered_long$Question == "Q9"] <- "Dax"
d_filtered_long$Question[d_filtered_long$Question == "Q12"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_enDeJ2onL1JrLP8"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_eY8Vwfih2OynNCm"] <- "Yarn"  #replace the serial number that identifies the answer choice with the name of the object that corresponds to that choice.
d_filtered_long$Choice[d_filtered_long$Choice == "IM_enDeJ2onL1JrLP8"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_5A9xQWROP0v4aPA"] <- "Dax"
d_filtered_long = d_filtered_long %>% filter( !grepl("Import|Response",ResponseId)) #filter some unwanted rows out.
#is.na(d_filtered_long$Choice)
d_filtered_long$Choice[d_filtered_long$Choice==""] <- NA #replace empty slots with NA
d_filtered_long = d_filtered_long %>% filter(!is.na(Choice)) # maintain only the questions that have answers, i.e. the question that appeared to each participant in the random trial.
d_filtered_long = d_filtered_long %>%
mutate(Match = ifelse(Question == Choice, "Shape", "Material/Color"))
head(d_filtered_long)
####Import data
d = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/Jara-ettinger2022_October 31, 2022_19.22.csv")
head(d)
#### Data exclusion / filtering
d_filtered = d %>% select(c("ResponseId", "Q5", "Q9", "Q12"))
d_filtered_long = d_filtered %>%
pivot_longer(cols = -c("ResponseId") ,names_to = 'Question', values_to = 'Choice')
d_filtered_long$Question[d_filtered_long$Question == "Q5"] <- "Yarn" #replace question number with the name of the object that is shown in that question
d_filtered_long$Question[d_filtered_long$Question == "Q9"] <- "Dax"
d_filtered_long$Question[d_filtered_long$Question == "Q12"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_eY8Vwfih2OynNCm"] <- "Yarn"  #replace the serial number that identifies the answer choice with the name of the object that corresponds to that choice.
d_filtered_long$Choice[d_filtered_long$Choice == "IM_enDeJ2onL1JrLP8"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_5A9xQWROP0v4aPA"] <- "Dax"
d_filtered_long = d_filtered_long %>% filter( !grepl("Import|Response",ResponseId)) #filter some unwanted rows out.
#is.na(d_filtered_long$Choice)
d_filtered_long$Choice[d_filtered_long$Choice==""] <- NA #replace empty slots with NA
d_filtered_long = d_filtered_long %>% filter(!is.na(Choice)) # maintain only the questions that have answers, i.e. the question that appeared to each participant in the random trial.
d_filtered_long = d_filtered_long %>%
mutate(Match = ifelse(Question == Choice, "Shape", "Material/Color"))
head(d_filtered_long)
ggplot(d_filtered_long, aes(x=Match, fill=Question)) +
geom_bar(position="dodge")
#model1 = lm(Match ~ Question, data_new)
#summary(model1)
chisq.test(d_filtered_long$Match, d_filtered_long$Question, correct=FALSE)
graph1 <- ggplot(d_filtered_long, aes(x=Match, fill=Question)) +
geom_bar(position="dodge")
graph1
#model1 = lm(Match ~ Question, data_new)
#summary(model1)
chisq.test(d_filtered_long$Match, d_filtered_long$Question, correct=FALSE)
print(graph1)
#model1 = lm(Match ~ Question, data_new)
#summary(model1)
chisq.test(d_filtered_long$Match, d_filtered_long$Question, correct=FALSE)
model1 = lm(Match ~ Question, data_new)
library(lme4)
###Data Preparation
#install.packages("lme4",repos="http://r-forge.r-project.org")
install.packages("statmod")
library(lme4)
###Data Preparation
install.packages("lme4",repos="http://r-forge.r-project.org")
library(lme4)
?lme4
??lme4
install.packages("lme4")
yes
library(lme4)
require(lme4)
#data_new[is.na(data_new) | data_new == "Inf"] <- NA
model2 = glmer (Match ~ Question, data_new)
#data_new[is.na(data_new) | data_new == "Inf"] <- NA
#model2 = glmer (Match ~ Question, data_new)
model1 = lm(Match ~ Question, data_new)
###Data Preparation
#install.packages("lme4",repos="http://r-forge.r-project.org")
#install.packages("statmod")
install.packages("lme4")
####Load Relevant Libraries and Functions
library(tidyverse)
library(foreign)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(here)
library(lme4)
####Import datare
d = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/Jara-ettinger2022_October 31, 2022_19.22.csv")
head(d)
#### Data exclusion / filtering
d_filtered = d %>% select(c("ResponseId", "Q5", "Q9", "Q12"))
d_filtered_long = d_filtered %>%
pivot_longer(cols = -c("ResponseId") ,names_to = 'Example', values_to = 'Choice')
#### Prepare data for analysis - create columns etc.
d_filtered_long$Example[d_filtered_long$Example == "Q5"] <- "Yarn" #replace question number with the name of the object that is shown in that question
d_filtered_long$Example[d_filtered_long$Example == "Q9"] <- "Dax"
d_filtered_long$Example[d_filtered_long$Example == "Q12"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_eY8Vwfih2OynNCm"] <- "Yarn"  #replace the serial number that identifies the answer choice with the name of the object that corresponds to that choice.
d_filtered_long$Choice[d_filtered_long$Choice == "IM_enDeJ2onL1JrLP8"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_5A9xQWROP0v4aPA"] <- "Dax"
d_filtered_long = d_filtered_long %>% filter( !grepl("Import|Response",ResponseId)) #filter some unwanted rows out.
#is.na(d_filtered_long$Choice)
d_filtered_long$Choice[d_filtered_long$Choice==""] <- NA #replace empty slots with NA
d_filtered_long = d_filtered_long %>% filter(!is.na(Choice)) # maintain only the questions that have answers, i.e. the question that appeared to each participant in the random trial.
d_filtered_long = d_filtered_long %>%
mutate(Match = ifelse(Example == Choice, "Shape",
ifelse(Example == "Yarn" & Choice == "Fep","Color",
ifelse(Example == "Yarn" & Choice =="Dax", "Material",
ifelse(Example =="Dax" & Choice == "yarn", "Color",
ifelse(Example =="Dax" & Choice == "Fep", "Material",
ifelse(Example == "Fep" & Choice =="Dax", "Color", "Material"
)
)
)
)
)
)
)
d_filtered_long = d_filtered_long %>%
mutate(Location = "US", Experiment= "US_Adults_Objects") %>%
select(c("Experiment", "Example", "Match","Location" ))
colnames(d_filtered_long)[3] = "Choice"
head(d_filtered_long)
# importing the Tsimane data from original paper
d_Tsimane = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/ShapeBias_Data_original.csv")
d_Tsimane_filtered = d_Tsimane %>% select(c("Experiment", "Example", "Choice","Location"))
df_combined <- rbind(d_filtered_long, d_Tsimane_filtered)
df_combined$Example[df_combined$Example == "Yarn"] <- "Arch" #replace question number with the name of the object that is shown in that question
df_combined$Example[df_combined$Example == "Dax"] <- "Snowman"
df_combined$Example[df_combined$Example == "Fep"] <- "Lamp"
#d_filtered_long_summarized = d_filtered_long %>%
# group_by(Question, Choice) %>%
#summarise(counter = n(Match == "Shape"))
#using only us data
graph1 <- ggplot(d_filtered_long, aes(x=Match, fill=Question)) +
geom_bar(position="dodge")
data_new <- d_filtered_long
data_new$Match[data_new$Match == "Shape"] <- 1
View(data_new)
#d_filtered_long_summarized = d_filtered_long %>%
# group_by(Question, Choice) %>%
#summarise(counter = n(Match == "Shape"))
#using only us data
graph1 <- ggplot(d_filtered_long, aes(x=Match, fill=Question)) +
geom_bar(position="dodge")
data_new <- d_filtered_long
data_new$Choice[data_new$Choice == "Shape"] <- 1
data_new$Choice[data_new$Choice == "Material/Color"] <- 0
# Duplicate data
#data_new[is.na(data_new) | data_new == "Inf"] <- NA
#model2 = glmer (Choice ~ Question, data_new)
model1 = lm(Choice ~ Question, data_new)
# Duplicate data
#data_new[is.na(data_new) | data_new == "Inf"] <- NA
#model2 = glmer (Choice ~ Question, data_new)
model1 = lm(Choice ~ Example, data_new)
View(data_new)
data_new$Choice[data_new$Choice == "Shape"] <- 1
data_new$Choice[data_new$Choice == "Material/Color"] <- 0
# Duplicate data
#data_new[is.na(data_new) | data_new == "Inf"] <- NA
#model2 = glmer (Choice ~ Question, data_new)
model1 = lm(Choice ~ Example, data_new)
model1
data_new$Choice[data_new$Choice == "Material"] <- 0
# Duplicate data
#data_new[is.na(data_new) | data_new == "Inf"] <- NA
#model2 = glmer (Choice ~ Question, data_new)
model1 = lm(Choice ~ Example, data_new)
model1
#summary(model1)
chisq.test(d_filtered_long$Choice, d_filtered_long$Example, correct=FALSE)
#using the combined data
m <- glmer(Choice=="Shape" ~  Location  + (1 + Location| Example) + (1 | Experiment),df_combined,family="binomial")
#using the combined data
m <- glmer(Choice=="Shape" ~  Location  + (1 + Location| Example) + (1 | Experiment),df_combined,family="binomial")
getwd()
#using only us data
graph1 <- ggplot(d_filtered_long, aes(x=Match, fill=Question)) +
geom_bar(position="dodge")
#using only us data
graph1 <- ggplot(d_filtered_long, aes(x=Match, fill=Question)) +
geom_bar(position="dodge")
graph1
#using only us data
graph1 <- ggplot(d_filtered_long, aes(x=Choice, fill=Question)) +
geom_bar(position="dodge")
graph1
#using only us data
graph1 <- ggplot(d_filtered_long, aes(x=Choice, fill=Exempler)) +
geom_bar(position="dodge")
graph1
View(d_filtered_long)
#using only us data
graph1 <- ggplot(d_filtered_long, aes(x=Choice, fill=Example)) +
geom_bar(position="dodge")
graph1
#using the combined data
m <- glmer(Choice=="Shape" ~  Location  + (1 + Location| Example) + (1 | Experiment),df_combined,family="binomial")
###Data Preparation
#install.packages("lme4",repos="http://r-forge.r-project.org")
#install.packages("statmod")
#install.packages("lme4")
####Load Relevant Libraries and Functions
library(tidyverse)
library(foreign)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(here)
library(lme4)
####Import datare
d = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/Jara-ettinger2022_October 31, 2022_19.22.csv")
head(d)
#### Data exclusion / filtering
d_filtered = d %>% select(c("ResponseId", "Q5", "Q9", "Q12"))
d_filtered_long = d_filtered %>%
pivot_longer(cols = -c("ResponseId") ,names_to = 'Example', values_to = 'Choice')
#### Prepare data for analysis - create columns etc.
d_filtered_long$Example[d_filtered_long$Example == "Q5"] <- "Yarn" #replace question number with the name of the object that is shown in that question
d_filtered_long$Example[d_filtered_long$Example == "Q9"] <- "Dax"
d_filtered_long$Example[d_filtered_long$Example == "Q12"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_eY8Vwfih2OynNCm"] <- "Yarn"  #replace the serial number that identifies the answer choice with the name of the object that corresponds to that choice.
d_filtered_long$Choice[d_filtered_long$Choice == "IM_enDeJ2onL1JrLP8"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_5A9xQWROP0v4aPA"] <- "Dax"
d_filtered_long = d_filtered_long %>% filter( !grepl("Import|Response",ResponseId)) #filter some unwanted rows out.
#is.na(d_filtered_long$Choice)
d_filtered_long$Choice[d_filtered_long$Choice==""] <- NA #replace empty slots with NA
d_filtered_long = d_filtered_long %>% filter(!is.na(Choice)) # maintain only the questions that have answers, i.e. the question that appeared to each participant in the random trial.
d_filtered_long = d_filtered_long %>%
mutate(Match = ifelse(Example == Choice, "Shape",
ifelse(Example == "Yarn" & Choice == "Fep","Color",
ifelse(Example == "Yarn" & Choice =="Dax", "Material",
ifelse(Example =="Dax" & Choice == "yarn", "Color",
ifelse(Example =="Dax" & Choice == "Fep", "Material",
ifelse(Example == "Fep" & Choice =="Dax", "Color", "Material"
)
)
)
)
)
)
)
d_filtered_long = d_filtered_long %>%
mutate(Location = "US", Experiment= "US_Adults_Objects") %>%
select(c("Experiment", "Example", "Match","Location" ))
colnames(d_filtered_long)[3] = "Choice"
head(d_filtered_long)
# importing the Tsimane data from original paper
d_Tsimane = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/ShapeBias_Data_original.csv")
d_Tsimane_filtered = d_Tsimane %>% select(c("Experiment", "Example", "Choice","Location"))
df_combined <- rbind(d_filtered_long, d_Tsimane_filtered)
df_combined$Example[df_combined$Example == "Yarn"] <- "Arch" #replace question number with the name of the object that is shown in that question
df_combined$Example[df_combined$Example == "Dax"] <- "Snowman"
df_combined$Example[df_combined$Example == "Fep"] <- "Lamp"
#d_filtered_long_summarized = d_filtered_long %>%
# group_by(Question, Choice) %>%
#summarise(counter = n(Match == "Shape"))
#using only us data
graph1 <- ggplot(d_filtered_long, aes(x=Choice, fill=Example)) +
geom_bar(position="dodge")
graph1
data_new <- d_filtered_long
data_new$Choice[data_new$Choice == "Shape"] <- 1
data_new$Choice[data_new$Choice == "Material"] <- 0
# Duplicate data
#data_new[is.na(data_new) | data_new == "Inf"] <- NA
#model2 = glmer (Choice ~ Question, data_new)
model1 = lm(Choice ~ Example, data_new)
model1
#summary(model1)
chisq.test(d_filtered_long$Choice, d_filtered_long$Example, correct=FALSE)
#using the combined data
m <- glmer(Choice=="Shape" ~  Location  + (1 + Location| Example) + (1 | Experiment),df_combined,family="binomial")
View(m)
m
