graph1
View(d_filtered_long)
#using only us data
graph1 <- ggplot(d_filtered_long, aes(x=Choice, fill=Example)) +
geom_bar(position="dodge")
graph1
#using the combined data
m <- glmer(Choice=="Shape" ~  Location  + (1 + Location| Example) + (1 | Experiment),df_combined,family="binomial")
###Data Preparation
#install.packages("lme4",repos="http://r-forge.r-project.org")
#install.packages("statmod")
#install.packages("lme4")
####Load Relevant Libraries and Functions
library(tidyverse)
library(foreign)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(here)
library(lme4)
####Import datare
d = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/Jara-ettinger2022_October 31, 2022_19.22.csv")
head(d)
#### Data exclusion / filtering
d_filtered = d %>% select(c("ResponseId", "Q5", "Q9", "Q12"))
d_filtered_long = d_filtered %>%
pivot_longer(cols = -c("ResponseId") ,names_to = 'Example', values_to = 'Choice')
#### Prepare data for analysis - create columns etc.
d_filtered_long$Example[d_filtered_long$Example == "Q5"] <- "Yarn" #replace question number with the name of the object that is shown in that question
d_filtered_long$Example[d_filtered_long$Example == "Q9"] <- "Dax"
d_filtered_long$Example[d_filtered_long$Example == "Q12"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_eY8Vwfih2OynNCm"] <- "Yarn"  #replace the serial number that identifies the answer choice with the name of the object that corresponds to that choice.
d_filtered_long$Choice[d_filtered_long$Choice == "IM_enDeJ2onL1JrLP8"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_5A9xQWROP0v4aPA"] <- "Dax"
d_filtered_long = d_filtered_long %>% filter( !grepl("Import|Response",ResponseId)) #filter some unwanted rows out.
#is.na(d_filtered_long$Choice)
d_filtered_long$Choice[d_filtered_long$Choice==""] <- NA #replace empty slots with NA
d_filtered_long = d_filtered_long %>% filter(!is.na(Choice)) # maintain only the questions that have answers, i.e. the question that appeared to each participant in the random trial.
d_filtered_long = d_filtered_long %>%
mutate(Match = ifelse(Example == Choice, "Shape",
ifelse(Example == "Yarn" & Choice == "Fep","Color",
ifelse(Example == "Yarn" & Choice =="Dax", "Material",
ifelse(Example =="Dax" & Choice == "yarn", "Color",
ifelse(Example =="Dax" & Choice == "Fep", "Material",
ifelse(Example == "Fep" & Choice =="Dax", "Color", "Material"
)
)
)
)
)
)
)
d_filtered_long = d_filtered_long %>%
mutate(Location = "US", Experiment= "US_Adults_Objects") %>%
select(c("Experiment", "Example", "Match","Location" ))
colnames(d_filtered_long)[3] = "Choice"
head(d_filtered_long)
# importing the Tsimane data from original paper
d_Tsimane = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/ShapeBias_Data_original.csv")
d_Tsimane_filtered = d_Tsimane %>% select(c("Experiment", "Example", "Choice","Location"))
df_combined <- rbind(d_filtered_long, d_Tsimane_filtered)
df_combined$Example[df_combined$Example == "Yarn"] <- "Arch" #replace question number with the name of the object that is shown in that question
df_combined$Example[df_combined$Example == "Dax"] <- "Snowman"
df_combined$Example[df_combined$Example == "Fep"] <- "Lamp"
#d_filtered_long_summarized = d_filtered_long %>%
# group_by(Question, Choice) %>%
#summarise(counter = n(Match == "Shape"))
#using only us data
graph1 <- ggplot(d_filtered_long, aes(x=Choice, fill=Example)) +
geom_bar(position="dodge")
graph1
data_new <- d_filtered_long
data_new$Choice[data_new$Choice == "Shape"] <- 1
data_new$Choice[data_new$Choice == "Material"] <- 0
# Duplicate data
#data_new[is.na(data_new) | data_new == "Inf"] <- NA
#model2 = glmer (Choice ~ Question, data_new)
model1 = lm(Choice ~ Example, data_new)
model1
#summary(model1)
chisq.test(d_filtered_long$Choice, d_filtered_long$Example, correct=FALSE)
#using the combined data
m <- glmer(Choice=="Shape" ~  Location  + (1 + Location| Example) + (1 | Experiment),df_combined,family="binomial")
View(m)
m
###Data Preparation
#install.packages("lme4",repos="http://r-forge.r-project.org")
#install.packages("statmod")
#install.packages("lme4")
####Load Relevant Libraries and Functions
library(tidyverse)
library(foreign)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(here)
library(lme4)
####Import datare
d = read.csv("jara-ettinger2022/code/Jara-ettinger2022_November 27, 2022_14.55.csv")
###Data Preparation
#install.packages("lme4",repos="http://r-forge.r-project.org")
#install.packages("statmod")
#install.packages("lme4")
####Load Relevant Libraries and Functions
library(tidyverse)
library(foreign)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(here)
library(lme4)
####Import datare
d = read.csv("Jara-ettinger2022_November 27, 2022_14.55.csv")
head(d)
#### Data exclusion / filtering
d_filtered = d %>% select(c("ResponseId", "Q5", "Q9", "Q12"))
d_filtered_long = d_filtered %>%
pivot_longer(cols = -c("ResponseId") ,names_to = 'Example', values_to = 'Choice')
#### Prepare data for analysis - create columns etc.
d_filtered_long$Example[d_filtered_long$Example == "Q5"] <- "Yarn" #replace question number with the name of the object that is shown in that question
d_filtered_long$Example[d_filtered_long$Example == "Q9"] <- "Dax"
d_filtered_long$Example[d_filtered_long$Example == "Q12"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_eY8Vwfih2OynNCm"] <- "Yarn"  #replace the serial number that identifies the answer choice with the name of the object that corresponds to that choice.
d_filtered_long$Choice[d_filtered_long$Choice == "IM_enDeJ2onL1JrLP8"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_5A9xQWROP0v4aPA"] <- "Dax"
d_filtered_long = d_filtered_long %>% filter( !grepl("Import|Response",ResponseId)) #filter some unwanted rows out.
#is.na(d_filtered_long$Choice)
d_filtered_long$Choice[d_filtered_long$Choice==""] <- NA #replace empty slots with NA
d_filtered_long = d_filtered_long %>% filter(!is.na(Choice)) # maintain only the questions that have answers, i.e. the question that appeared to each participant in the random trial.
d_filtered_long = d_filtered_long %>%
mutate(Match = ifelse(Example == Choice, "Shape",
ifelse(Example == "Yarn" & Choice == "Fep","Color",
ifelse(Example == "Yarn" & Choice =="Dax", "Material",
ifelse(Example =="Dax" & Choice == "yarn", "Color",
ifelse(Example =="Dax" & Choice == "Fep", "Material",
ifelse(Example == "Fep" & Choice =="Dax", "Color", "Material"
)
)
)
)
)
)
)
d_filtered_long = d_filtered_long %>%
mutate(Location = "US", Experiment= "US_Adults_Objects") %>%
select(c("Experiment", "Example", "Match","Location" ))
colnames(d_filtered_long)[3] = "Choice"
d_filtered_long_summarized = d_filtered_long %>%
group_by(Choice, Location) %>%
summarise( n = n(), Percentage = n / nrow(d_filtered_long))
# length() only gets distinct un-redundant
head(d_filtered_long)
###Data Preparation
#install.packages("lme4",repos="http://r-forge.r-project.org")
#install.packages("statmod")
#install.packages("lme4")
####Load Relevant Libraries and Functions
library(tidyverse)
library(foreign)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(here)
library(lme4)
####Import datare
d = read.csv("Jara-ettinger2022_December 1, 2022_18.18.csv")
head(d)
#### Data exclusion / filtering
d_filtered = d %>% select(c("ResponseId", "Q5", "Q9", "Q12"))
d_filtered_long = d_filtered %>%
pivot_longer(cols = -c("ResponseId") ,names_to = 'Example', values_to = 'Choice')
#### Prepare data for analysis - create columns etc.
d_filtered_long$Example[d_filtered_long$Example == "Q5"] <- "Yarn" #replace question number with the name of the object that is shown in that question
d_filtered_long$Example[d_filtered_long$Example == "Q9"] <- "Dax"
d_filtered_long$Example[d_filtered_long$Example == "Q12"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_eY8Vwfih2OynNCm"] <- "Yarn"  #replace the serial number that identifies the answer choice with the name of the object that corresponds to that choice.
d_filtered_long$Choice[d_filtered_long$Choice == "IM_enDeJ2onL1JrLP8"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_5A9xQWROP0v4aPA"] <- "Dax"
d_filtered_long = d_filtered_long %>% filter( !grepl("Import|Response",ResponseId)) #filter some unwanted rows out.
#is.na(d_filtered_long$Choice)
d_filtered_long$Choice[d_filtered_long$Choice==""] <- NA #replace empty slots with NA
d_filtered_long = d_filtered_long %>% filter(!is.na(Choice)) # maintain only the questions that have answers, i.e. the question that appeared to each participant in the random trial.
d_filtered_long = d_filtered_long %>%
mutate(Match = ifelse(Example == Choice, "Shape",
ifelse(Example == "Yarn" & Choice == "Fep","Color",
ifelse(Example == "Yarn" & Choice =="Dax", "Material",
ifelse(Example =="Dax" & Choice == "yarn", "Color",
ifelse(Example =="Dax" & Choice == "Fep", "Material",
ifelse(Example == "Fep" & Choice =="Dax", "Color", "Material"
)
)
)
)
)
)
)
d_filtered_long = d_filtered_long %>%
mutate(Location = "US", Experiment= "US_Adults_Objects") %>%
select(c("Experiment", "Example", "Match","Location" ))
colnames(d_filtered_long)[3] = "Choice"
d_filtered_long_summarized = d_filtered_long %>%
group_by(Choice, Location) %>%
summarise( n = n(), Percentage = n / nrow(d_filtered_long))
# length() only gets distinct un-redundant
head(d_filtered_long)
# importing the Tsimane data from original paper
d_Tsimane = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/ShapeBias_Data_original.csv")
d_Tsimane_filtered = d_Tsimane %>% select(c("Experiment", "Example", "Choice","Location"))
d_Tsimane_summarized = d_Tsimane_filtered %>%
group_by(Choice, Location) %>%
summarise( n = n(), Percentage = n / nrow(d_Tsimane_filtered))
df_combined <- rbind(d_filtered_long, d_Tsimane_filtered)
df_combined_summarised <- rbind(d_filtered_long_summarized, d_Tsimane_summarized)
df_combined$Example[df_combined$Example == "Yarn"] <- "Arch" #replace question number with the name of the object that is shown in that question
df_combined$Example[df_combined$Example == "Dax"] <- "Snowman"
df_combined$Example[df_combined$Example == "Fep"] <- "Lamp"
ggplot(df_combined, aes(x=Example, fill = Choice)) +
geom_bar(position = "dodge", width = .7) +
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969")) +
scale_x_discrete("Example") +
scale_y_continuous("Frequency of choices out of - ") +
facet_wrap(~Location) +
labs(title = "Word - Object categorization", subtitle = "Shape bias")
ggplot(df_combined_summarised, aes(x = Location, fill = Choice)) +
geom_bar( aes(y = Percentage), stat = "identity", width = 0.7) +
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969" ))
# Statistical analysis
data_new <- d_filtered_long
data_new$Choice[data_new$Choice == "Shape"] <- 1
data_new$Choice[data_new$Choice == "Material"] <- 0
#using the combined data
m <- glmer(Choice=="Shape" ~  Location  + (1 + Location| Example) + (1 | Experiment),df_combined,family="binomial")
summary(m)
ggplot(df_combined, aes(x=Example, fill = Choice)) +
geom_bar(position = "dodge", width = .7) +
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969")) +
scale_x_discrete("Example") +
scale_y_continuous("Frequency of choices out of - ") +
facet_wrap(~Location) +
labs(title = "Word - Object categorization", subtitle = "Shape bias")
ggplot(df_combined, aes(x=Example, fill = Choice)) +
geom_bar(position = "dodge", width = .7) +
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969")) +
scale_x_discrete("Example") +
scale_y_continuous("Frequency of choices out of - ") +
facet_wrap(~Location) +
labs(title = "Word - Object categorization", subtitle = "Shape bias")
ggplot(df_combined_summarised, aes(x = Location, fill = Choice)) +
geom_bar( aes(y = Percentage), stat = "identity", width = 0.7, position = "dodge") +
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969" ))
ggplot(df_combined_summarised, aes(x = Location, fill = Choice)) +
geom_bar( aes(y = Percentage), stat = "identity", width = 0.7) +
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969" ))
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969" ))
ggplot(df_combined_summarised, aes(x = Location, fill = Choice)) +
geom_bar( aes(y = Percentage), stat = "identity", width = 0.7) +
facet_wrap(~Example)+
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969" ))
ggplot(df_combined_summarised, aes(x = Location, fill = Choice)) +
geom_bar( aes(y = Percentage), stat = "identity", width = 0.7) +
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969" ))
View(df_combined_summarised)
ggplot(df_combined, aes(x=Example, fill = Choice)) +
geom_bar(position="fill", width = .7) +
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969")) +
scale_x_discrete("Example") +
scale_y_continuous("Frequency of choices out of - ") +
facet_wrap(~Location) +
labs(title = "Word - Object categorization", subtitle = "Shape bias")
ggplot(df_combined, aes(x=Example, fill = Choice)) +
geom_bar(position="fill", position_dodge(), width = .7) +
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969")) +
scale_x_discrete("Example") +
scale_y_continuous("Frequency of choices out of - ") +
facet_wrap(~Location) +
labs(title = "Word - Object categorization", subtitle = "Shape bias")
ggplot(df_combined, aes(x=Example, fill = Choice)) +
geom_bar(position="fill", width = .7) +
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969")) +
scale_x_discrete("Example") +
scale_y_continuous("Frequency of choices out of - ") +
facet_wrap(~Location) +
labs(title = "Word - Object categorization", subtitle = "Shape bias")
ggplot(df_combined, aes(x=Example, fill = Choice)) +
geom_bar(position="fill", width = .7) +
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969")) +
scale_x_discrete("Example") +
scale_y_continuous("Frequency of choices out of - ") +
facet_wrap(~Location) +
labs(title = "Word - Object categorization", subtitle = "Shape bias")
ggplot(df_combined_summarised, aes(x = Location, fill = Choice)) +
geom_bar( aes(y = Percentage), stat = "identity", width = 0.7) +
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969" ))
###Data Preparation
#install.packages("lme4",repos="http://r-forge.r-project.org")
#install.packages("statmod")
#install.packages("lme4")
####Load Relevant Libraries and Functions
library(tidyverse)
library(foreign)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(here)
library(lme4)
####Import datare
d = read.csv("Jara-ettinger2022_December 1, 2022_18.18.csv")
head(d)
#### Data exclusion / filtering
d_filtered = d %>% select(c("ResponseId", "Q5", "Q9", "Q12"))
d_filtered_long = d_filtered %>%
pivot_longer(cols = -c("ResponseId") ,names_to = 'Example', values_to = 'Choice')
#### Prepare data for analysis - create columns etc.
d_filtered_long$Example[d_filtered_long$Example == "Q5"] <- "Yarn" #replace question number with the name of the object that is shown in that question
d_filtered_long$Example[d_filtered_long$Example == "Q9"] <- "Dax"
d_filtered_long$Example[d_filtered_long$Example == "Q12"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_eY8Vwfih2OynNCm"] <- "Yarn"  #replace the serial number that identifies the answer choice with the name of the object that corresponds to that choice.
d_filtered_long$Choice[d_filtered_long$Choice == "IM_enDeJ2onL1JrLP8"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_5A9xQWROP0v4aPA"] <- "Dax"
d_filtered_long = d_filtered_long %>% filter( !grepl("Import|Response",ResponseId)) #filter some unwanted rows out.
#is.na(d_filtered_long$Choice)
d_filtered_long$Choice[d_filtered_long$Choice==""] <- NA #replace empty slots with NA
d_filtered_long = d_filtered_long %>% filter(!is.na(Choice)) # maintain only the questions that have answers, i.e. the question that appeared to each participant in the random trial.
d_filtered_long = d_filtered_long %>%
mutate(Match = ifelse(Example == Choice, "Shape",
ifelse(Example == "Yarn" & Choice == "Fep","Color",
ifelse(Example == "Yarn" & Choice =="Dax", "Material",
ifelse(Example =="Dax" & Choice == "yarn", "Color",
ifelse(Example =="Dax" & Choice == "Fep", "Material",
ifelse(Example == "Fep" & Choice =="Dax", "Color", "Material"
)
)
)
)
)
)
)
d_filtered_long = d_filtered_long %>%
mutate(Location = "US", Experiment= "US_Adults_Objects") %>%
select(c("Experiment", "Example", "Match","Location" ))
colnames(d_filtered_long)[3] = "Choice"
d_filtered_long_summarized = d_filtered_long %>%
group_by(Choice, Location) %>%
summarise( n = n(), Percentage = n / nrow(d_filtered_long))
# length() only gets distinct un-redundant
head(d_filtered_long)
# importing the Tsimane data from original paper
d_Tsimane = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/ShapeBias_Data_original.csv")
d_Tsimane_filtered = d_Tsimane %>% select(c("Experiment", "Example", "Choice","Location"))
d_Tsimane_summarized = d_Tsimane_filtered %>%
group_by(Choice, Location) %>%
summarise( n = n(), Percentage = n / nrow(d_Tsimane_filtered))
df_combined <- rbind(d_filtered_long, d_Tsimane_filtered)
df_combined_summarised <- rbind(d_filtered_long_summarized, d_Tsimane_summarized)
df_combined$Example[df_combined$Example == "Yarn"] <- "Arch" #replace question number with the name of the object that is shown in that question
df_combined$Example[df_combined$Example == "Dax"] <- "Snowman"
df_combined$Example[df_combined$Example == "Fep"] <- "Lamp"
ggplot(df_combined, aes(x=Example, fill = Choice)) +
geom_bar(position="fill", width = .7) +
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969")) +
scale_x_discrete("Example") +
scale_y_continuous("Frequency of choices out of - ") +
facet_wrap(~Location) +
labs(title = "Word - Object categorization", subtitle = "Shape bias")
ggplot(df_combined_summarised, aes(x = Location, fill = Choice)) +
geom_bar( aes(y = Percentage), stat = "identity", width = 0.7) +
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969" ))
# Statistical analysis
data_new <- d_filtered_long
data_new$Choice[data_new$Choice == "Shape"] <- 1
data_new$Choice[data_new$Choice == "Material"] <- 0
#using the combined data
m <- glmer(Choice=="Shape" ~  Location  + (1 + Location| Example) + (1 | Experiment),df_combined,family="binomial")
summary(m)
View(df_combined)
# Statistical analysis
data_new <- d_filtered_long
data_new$Choice[data_new$Choice == "Shape"] <- 1
data_new$Choice[data_new$Choice == "Material"] <- 0
#using the combined data
m <- glmer(Choice=="Shape" ~  Location  + (1 + Location| Example),df_combined,family="binomial")
#m <- glmer(Choice=="Shape" ~  Location  + (1 + Location| Example) + (1 | Experiment),df_combined,family="binomial")
summary(m)
View(df_combined)
glm(Choice=="Shape" ~  Location, data = df_combined)
summary(glm(Choice=="Shape" ~  Location, data = df_combined))
summary(glm(Choice=="Shape" ~  Location, data = df_combined, family = "binomial"))
summary(glmer(Choice=="Shape" ~  Location  + (1 | Example), df_combined, family="binomial"))
library(lme4)
summary(glmer(Choice=="Shape" ~  Location  + (1 | Example), df_combined, family="binomial"))
m
ranef(m)
![Caption for the picture.]/Users/samahabdelrahim/Desktop/jara-ettinger2022/writeup/comparison.png)
![Caption for the picture.](/Users/samahabdelrahim/Desktop/jara-ettinger2022/writeup/comparison.png)
![Caption for the picture.](/Users/samahabdelrahim/Desktop/jara-ettinger2022/writeup/comparison.png)
![Caption for the picture.] (/Users/samahabdelrahim/Desktop/jara-ettinger2022/writeup/comparison.png)
![Caption for the picture](/Users/samahabdelrahim/Desktop/jara-ettinger2022/writeup/comparison.png)
![ Caption for the picture ](/Users/samahabdelrahim/Desktop/jara-ettinger2022/writeup/comparison.png)
![ cc](/Users/samahabdelrahim/Desktop/jara-ettinger2022/writeup/comparison.png)
![ cc](//Users/samahabdelrahim/Desktop/jara-ettinger2022/writeup/comparison.png)
![ cc](//Users//samahabdelrahim//Desktop//jara-ettinger2022//writeup//comparison.png)
![ cc](\Users\samahabdelrahim\Desktop\jara-ettinger2022\writeup\comparison.png)
![an image caption Source: Ultimate Funny Dog Videos Compilation 2013.](Users/samahabdelrahim/Desktop/jara-ettinger2022/writeup/comparison.png)
![an image caption Source: Ultimate Funny Dog Videos Compilation 2013.](Users/samahabdelrahim/Desktop/jara-ettinger2022/writeup/comparison.png)
![an image caption Source: Ultimate Funny Dog Videos Compilation 2013.](comparison.png)
![an image caption Source: Ultimate Funny Dog Videos Compilation 2013.](comparison.png)
###Data Preparation
#install.packages("lme4",repos="http://r-forge.r-project.org")
#install.packages("statmod")
#install.packages("lme4")
####Load Relevant Libraries and Functions
library(tidyverse)
library(foreign)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(here)
library(lme4)
####Import datare
d = read.csv("Jara-ettinger2022_December 1, 2022_18.18.csv")
head(d)
#### Data exclusion / filtering
d_filtered = d %>% select(c("ResponseId", "Q5", "Q9", "Q12"))
d_filtered_long = d_filtered %>%
pivot_longer(cols = -c("ResponseId") ,names_to = 'Example', values_to = 'Choice')
#### Prepare data for analysis - create columns etc.
d_filtered_long$Example[d_filtered_long$Example == "Q5"] <- "Yarn" #replace question number with the name of the object that is shown in that question
d_filtered_long$Example[d_filtered_long$Example == "Q9"] <- "Dax"
d_filtered_long$Example[d_filtered_long$Example == "Q12"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_eY8Vwfih2OynNCm"] <- "Yarn"  #replace the serial number that identifies the answer choice with the name of the object that corresponds to that choice.
d_filtered_long$Choice[d_filtered_long$Choice == "IM_enDeJ2onL1JrLP8"] <- "Fep"
d_filtered_long$Choice[d_filtered_long$Choice == "IM_5A9xQWROP0v4aPA"] <- "Dax"
d_filtered_long = d_filtered_long %>% filter( !grepl("Import|Response",ResponseId)) #filter some unwanted rows out.
#is.na(d_filtered_long$Choice)
d_filtered_long$Choice[d_filtered_long$Choice==""] <- NA #replace empty slots with NA
d_filtered_long = d_filtered_long %>% filter(!is.na(Choice)) # maintain only the questions that have answers, i.e. the question that appeared to each participant in the random trial.
d_filtered_long = d_filtered_long %>%
mutate(Match = ifelse(Example == Choice, "Shape",
ifelse(Example == "Yarn" & Choice == "Fep","Color",
ifelse(Example == "Yarn" & Choice =="Dax", "Material",
ifelse(Example =="Dax" & Choice == "yarn", "Color",
ifelse(Example =="Dax" & Choice == "Fep", "Material",
ifelse(Example == "Fep" & Choice =="Dax", "Color", "Material"
)
)
)
)
)
)
)
d_filtered_long = d_filtered_long %>%
mutate(Location = "US", Experiment= "US_Adults_Objects") %>%
select(c("Experiment", "Example", "Match","Location" ))
colnames(d_filtered_long)[3] = "Choice"
d_filtered_long_summarized = d_filtered_long %>%
group_by(Choice, Location) %>%
summarise( n = n(), Percentage = n / nrow(d_filtered_long))
# length() only gets distinct un-redundant
head(d_filtered_long)
# importing the Tsimane data from original paper
d_Tsimane = read.csv("/Users/samahabdelrahim/Desktop/jara-ettinger2022/code/ShapeBias_Data_original.csv")
d_Tsimane_filtered = d_Tsimane %>% select(c("Experiment", "Example", "Choice","Location"))
d_Tsimane_summarized = d_Tsimane_filtered %>%
group_by(Choice, Location) %>%
summarise( n = n(), Percentage = n / nrow(d_Tsimane_filtered))
df_combined <- rbind(d_filtered_long, d_Tsimane_filtered)
df_combined_summarised <- rbind(d_filtered_long_summarized, d_Tsimane_summarized)
df_combined$Example[df_combined$Example == "Yarn"] <- "Arch" #replace question number with the name of the object that is shown in that question
df_combined$Example[df_combined$Example == "Dax"] <- "Snowman"
df_combined$Example[df_combined$Example == "Fep"] <- "Lamp"
ggplot(df_combined, aes(x=Example, fill = Choice)) +
geom_bar(position="fill", width = .7) +
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969")) +
scale_x_discrete("Example") +
scale_y_continuous("Frequency of choices out of 144 trials ") +
facet_wrap(~Location) +
labs(title = "Word - Object categorization", subtitle = "Shape bias")
ggplot(df_combined_summarised, aes(x = Location, fill = Choice)) +
geom_bar( aes(y = Percentage), stat = "identity", width = 0.7) +
theme_minimal() +
scale_fill_manual(values = c("#B4DCB9", "#7F92B8", "#6C6969" ))
# Statistical analysis
data_new <- d_filtered_long
data_new$Choice[data_new$Choice == "Shape"] <- 1
data_new$Choice[data_new$Choice == "Material"] <- 0
#using the combined data
m <- glmer(Choice=="Shape" ~  Location  + (1 + Location| Example) ,df_combined,family="binomial")
#m <- glmer(Choice=="Shape" ~  Location  + (1 + Location| Example) + (1 | Experiment),df_combined,family="binomial")
summary(m)
